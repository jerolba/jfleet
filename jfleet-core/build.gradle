plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

compileJava   {
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

dependencies {
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
	compileOnly group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'
	compileOnly group: 'mysql', name: 'mysql-connector-java', version: '5.1.43'
    compileOnly group: 'org.postgresql', name: 'postgresql', version: '42.1.4'

	testCompile group: 'mysql', name: 'mysql-connector-java', version: '5.1.43'
	testCompile group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
	testCompile group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            artifactId 'jfleet'
            version version
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'JFleet'
                    description 'JFleet loads data mapped as JPA into DB with alternate and fast way from JPA'
                    url 'https://github.com/jerolba/jfleet'
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'jerolba'
                            name 'Jerónimo López'
                            email 'jerolba+jfleet@gmail.com'
                        }
                    }
                    scm {
                        connection 'scm:git:git://github.com/jerolba/jfleet.git'
                        developerConnection 'scm:git:ssh://github.com:jerolba/jfleet.git'
                        url 'https://github.com/jerolba/jfleet'
                                             
                    }
                }
            }
        }
    }
}

if (project.hasProperty('bintrayUser')){
    bintray {
        user = bintrayUser
        key = bintrayKey
        publications = ['mavenJava'] 
        pkg {
            repo = 'JFleet'
            name = 'jfleet'
            desc = 'JFleet loads data mapped as JPA into DB with alternate and fast way from JPA'
            websiteUrl = 'https://github.com/jerolba/jfleet'
            issueTrackerUrl = 'https://github.com/jerolba/jfleet/issues'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/jerolba/jfleet.git'
            labels = ['jpa', 'jdbc', 'mysql', 'postgres','load data','copy']
            version {
                name = '0.5.6'
                desc = 'Add pom.xml metainfo for maven central release'
                released  = new Date()
            }
        }
    }
}else {
    println 'No bintray configuration found. Expected bintray user and API key at $HOME/.gradle/gradle.properties file.'
}
